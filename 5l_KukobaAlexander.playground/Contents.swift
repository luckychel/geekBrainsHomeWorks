import Foundation
import PlaygroundSupport

//1. –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª ¬´Car¬ª –∏ –æ–ø–∏—Å–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞, –æ–±—â–∏–µ –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π, –∞ —Ç–∞–∫–∂–µ –º–µ—Ç–æ–¥ –¥–µ–π—Å—Ç–≤–∏—è.
//2. –°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ ¬´Car¬ª –∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤ –Ω–∏—Ö –º–µ—Ç–æ–¥—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π —Å –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–º: –æ—Ç–∫—Ä—ã—Ç—å/–∑–∞–∫—Ä—ã—Ç—å –æ–∫–Ω–æ, –∑–∞–ø—É—Å—Ç–∏—Ç—å/–∑–∞–≥–ª—É—à–∏—Ç—å –¥–≤–∏–≥–∞—Ç–µ–ª—å –∏ —Ç.–¥. (–ø–æ –æ–¥–Ω–æ–º—É –º–µ—Ç–æ–¥—É –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ, —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å —Å–ª–µ–¥—É–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ –¥–µ–π—Å—Ç–≤–∏—è, —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –æ–±—â–∞—è –¥–ª—è –≤—Å–µ—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π).
//3. –°–æ–∑–¥–∞—Ç—å –¥–≤–∞ –∫–ª–∞—Å—Å–∞, –∏–º–ø–ª–µ–º–µ–Ω—Ç–∏—Ä—É—é—â–∏—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª ¬´Car¬ª - trunkCar –∏ sport–°ar. –û–ø–∏—Å–∞—Ç—å –≤ –Ω–∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞, –æ—Ç–ª–∏—á–∞—é—â–∏–µ—Å—è –¥–ª—è —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∏ —Ü–∏—Å—Ç–µ—Ä–Ω—ã.
//4. –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ –Ω–∞–ø–∏—Å–∞—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ, –∏–º–ø–ª–µ–º–µ–Ω—Ç–∏—Ä—É—é—â–µ–µ –ø—Ä–æ—Ç–æ–∫–æ–ª CustomStringConvertible.
//5. –°–æ–∑–¥–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç–æ–≤ –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞. –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∫ –Ω–∏–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è.
//6. –í—ã–≤–µ—Å—Ç–∏ —Å–∞–º–∏ –æ–±—ä–µ–∫—Ç—ã –≤ –∫–æ–Ω—Å–æ–ª—å.

enum startStopStatus: String {
    case start = "–≤–∫–ª—é—á–µ–Ω"
    case stop = "–≤—ã–∫–ª—é—á–µ–Ω"
}

enum openCloseStatus : String {
    case open = "–æ—Ç–∫—Ä—ã—Ç–æ"
    case close = "–∑–∞–∫—Ä—ã—Ç–æ"
}

enum CarTransmission : String {
    case auto = "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è"
    case manual = "–†—É—á–Ω–∞—è"
    case robot = "–†–æ–±–æ—Ç"
}

enum TypeEngine: String {
    case petrol = "–±–µ–Ω–∑–∏–Ω–æ–≤—ã–π"
    case diesel = "–¥–∏–∑–µ–ª—å–Ω—ã–π"
    case electrical = "—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π"
    case gas = "–≥–∞–∑–æ–≤—ã–π"
}

protocol Car {
    
    var brand : String { get  }
    var year: Int { get }
    var transmission: CarTransmission { get }
    var engine: TypeEngine { get }
    
    var mileage: Double { get set }
    var currentVolumeTrunk: Double { get set }
    var maxVolumeTrunk: Double { get set }
    var engineStatus: startStopStatus? { get set }
    var windowStatus: openCloseStatus? { get set }
    
    var freeVolume : Double { get }
    static var countCar: Int {get set}
    
}

extension Car {
    mutating func setEngine(status: startStopStatus) -> Bool {
        guard self.engineStatus != status else {
            //self.description()
            print("‚ö†Ô∏è –°—Ç–∞—Ç—É—Å –¥–≤–∏–≥–∞—Ç–µ–ª—è –Ω–µ –ø–æ–º–µ–Ω—è–ª—Å—è - \(status.rawValue)\n")
            return false
        }
        self.engineStatus = status
        //self.description()
        print("‚úÖ –î–≤–∏–≥–∞—Ç–µ–ª—å - \(status.rawValue)\n")
        return true
    }
    
    mutating func setWindow(status: openCloseStatus) -> Bool {
        guard self.windowStatus != status else {
            //self.description()
            print("‚ö†Ô∏è –°—Ç–∞—Ç—É—Å –æ–∫–Ω–∞ –≤–æ–¥–∏—Ç–µ–ª—è –Ω–µ –ø–æ–º–µ–Ω—è–ª—Å—è - \(status.rawValue)\n")
            return false
        }
        self.windowStatus = status
        //self.description()
        print("‚úÖ –û–∫–Ω–æ –≤–æ–¥–∏—Ç–µ–ª—è - \(status.rawValue)\n")
        return true
    }
    
    mutating func driveCertainDistance(distance: Double) -> Double {
        guard distance > 0 else {
            print("‚ö†Ô∏è –ê–≤—Ç–æ–º–æ–±–∏–ª—å –Ω–µ –ø–æ–µ—Ö–∞–ª, —Ç.–∫. –æ–Ω –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–æ–µ—Ö–∞—Ç—å –Ω—É–ª–µ–≤—É—é –∏–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é –¥–∏—Å—Ç–∞–Ω—Ü–∏—é.\n")
            return self.mileage
        }
        self.mileage += distance
        print("‚úÖ –ê–≤—Ç–æ–º–æ–±–∏–ª—å –ø—Ä–æ–µ—Ö–∞–ª \(distance) –∫–º., –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ–±–µ–≥ —Å–æ—Å—Ç–æ–≤–ª—è–µ—Ç \(self.mileage) –∫–º.\n")
        return self.mileage
    }
 
}

class SportCar : Car {

    enum TypeOfPassengerCar: String {
        case sedan = "—Å–µ–¥–∞–Ω"
        case cupe = "–∫—É–ø–µ"
        case sport = "—Å–ø–æ—Ä—Ç"
        case krosover = "–∫—Ä–æ—Å–æ–≤–µ—Ä"
        case offroad = "–≤–Ω–µ–¥–æ—Ä–æ–∂–Ω–∏–∫"
    }
    
    var brand: String
    
    var year: Int
    
    var transmission: CarTransmission
    
    var engine: TypeEngine
    
    var mileage: Double
    
    var currentVolumeTrunk: Double
    
    var maxVolumeTrunk: Double
    
    var engineStatus: startStopStatus?
    
    var windowStatus: openCloseStatus?
    
    var freeVolume: Double {
        get {
            return maxVolumeTrunk - currentVolumeTrunk
        }
    }

    var type: TypeOfPassengerCar
    private var isTunning: Bool

    static var countCar: Int = 0
    
    func changeTunning() {
        self.isTunning = self.isTunning ? false : true
        print(self.isTunning ? "‚úÖ –ù–∞ –º–∞—à–∏–Ω—É –¥–æ–±–∞–≤–ª–µ–Ω —Ç—é–Ω–∏–Ω–≥.\n" : "‚úÖ –° –º–∞—à–∏–Ω—ã —É–±—Ä–∞–Ω —Ç—é–Ω–∏–Ω–≥\n")
        //self.description()
    }

    func setVolume(value: Double) -> Bool {
        //self.description()
        guard self.currentVolumeTrunk + value <= self.maxVolumeTrunk else {
            print("‚ùå –î–æ–ø—É—Å—Ç–∏–º—ã–π –æ–±—ä–µ–º –±–∞–≥–∞–∂–Ω–∏–∫–∞ - \(self.maxVolumeTrunk) –∫–≥, –ø–µ—Ä–µ–≥—Ä—É–∑ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç \((self.currentVolumeTrunk + value) - self.maxVolumeTrunk) –∫–≥\n")
            return false
        }
        self.currentVolumeTrunk += value
        print("‚úÖ –í—ã –ø–æ–ª–æ–∂–∏–ª–∏ –≤ –∫—É–∑–æ–≤ –≥—Ä—É–∑ –≤–µ—Å–æ–º \(value) –∫–≥, —Ç–µ–∫—É—â–∏–π –æ–±—ä–µ–º –±–∞–≥–∞–∂–Ω–∏–∫–∞ - \(self.currentVolumeTrunk) –∫–≥, —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –æ—Å—Ç–∞–ª–æ—Å—å \(self.freeVolume) –∫–≥\n")
        return true
    }
    
    init(brand: String, type: TypeOfPassengerCar, isTunning: Bool, year: Int, transmission: CarTransmission, engine: TypeEngine, mileage: Double, currentVolumeTrunk: Double, maxVolumeTrunk: Double, engineStatus: startStopStatus, windowStatus: openCloseStatus) {
        self.brand = brand
        self.year = year
        self.transmission = transmission
        self.engine = engine
        self.mileage = mileage
        self.currentVolumeTrunk = currentVolumeTrunk
        self.maxVolumeTrunk = maxVolumeTrunk
        self.engineStatus = engineStatus
        self.windowStatus = windowStatus
        
        self.type = type
        self.isTunning = isTunning
    
        print("üõû –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è \(self.brand)")
        SportCar.countCar += 1
        //Car.printCountCar()
    }
    
    deinit {
        print("üóë –î–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è \(self.brand)")
        SportCar.countCar -= 1
        //Car.printCountCar()
    }

}

extension SportCar: CustomStringConvertible {
    var description: String {
        print("üöô –õ–µ–≥–∫–æ–≤–∞—è –º–∞—à–∏–Ω–∞")
        print("- –¢–∏–ø \(self.type.rawValue)\n- –ü–æ–¥–≤–µ—Ä–≥–∞–ª–∞—Å—å —Ç—é–Ω–∏–Ω–≥—É \(self.isTunning ? "–î–∞" : "–ù–µ—Ç")\n")
        return ""
    }
}


class TrunkCar: Car {
    
    enum TypeOfTrunkCar : String {
        case tank = "—Ü–∏—Å—Ç–µ—Ä–Ω–∞"
        case build = "—Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è"
        case special = "—Å–ø–µ—Ü—Ç–µ—Ö–Ω–∏–∫–∞"
    }
    enum NumberOfAxies : String {
        case Ax2 = "–¥–≤—É—Ö–æ—Å–Ω—ã–µ"
        case Ax3 = "—Ç—Ä–µ—Ö–æ—Å–Ω—ã–µ"
        case Ax4 = "—á–µ—Ç—ã—Ä–µ—Ö–æ—Å–Ω—ã–µ"
        case Ax5AndMore = "–ø—è—Ç–∏–æ—Å–Ω—ã–µ –∏ –±–æ–ª–µ–µ"
    }
    enum ActionWithTheTrunk {
        case put, remove
    }
    
    var brand: String
    
    var year: Int
    
    var transmission: CarTransmission
    
    var engine: TypeEngine
    
    var mileage: Double
    
    var currentVolumeTrunk: Double
    
    var maxVolumeTrunk: Double
    
    var engineStatus: startStopStatus?
    
    var windowStatus: openCloseStatus?
    
    var freeVolume: Double {
        get {
            return maxVolumeTrunk - currentVolumeTrunk
        }
    }
    
    static var countCar: Int = 0
       
    var type: TypeOfTrunkCar
    var numAxies: NumberOfAxies
    
    func loadingAndUnloading(action: ActionWithTheTrunk, value: Double) {
        //description()
        switch action {
        case .put:
            switch value {
            case 0:
                print("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –∫—É–∑–æ–≤ –≥—Ä—É–∑ –≤–µ—Å–æ–º = 0 –∫–≥\n")
            case ..<0:
                print("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å –≤ –∫—É–∑–æ–≤ –≥—Ä—É–∑ –≤–µ—Å–æ–º < 0 –∫–≥\n")
            case 1...:
                guard (self.currentVolumeTrunk + value) < self.maxVolumeTrunk else {
                    print("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–ª–æ–∂–∏—Ç—å –≥—Ä—É–∑ –≤–µ—Å–æ–º \(value) –∫–≥, —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –æ—Å—Ç–∞–ª–æ—Å—å \(self.freeVolume) –∫–≥\n")
                    return
                }
                self.currentVolumeTrunk += value
                print("‚úÖ –í—ã –ø–æ–ª–æ–∂–∏–ª–∏ –≤ –∫—É–∑–æ–≤ –≥—Ä—É–∑ –≤–µ—Å–æ–º \(value) –∫–≥, —Å–µ–π—á–∞—Å –≤ –∫—É–∑–æ–≤–µ \(self.currentVolumeTrunk) –∫–≥, —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –æ—Å—Ç–∞–ª–æ—Å—å \(self.freeVolume) –∫–≥\n")
               
            default:
                fatalError("‚ö†Ô∏è –ü–æ–ø–∞–ª–æ –≤ default [put]")
            }
        case .remove:
            switch value {
            case 0:
                print("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–±—Ä–∞—Ç—å –∏–∑ –∫—É–∑–æ–≤–∞ –≥—Ä—É–∑ –≤–µ—Å–æ–º = 0 –∫–≥\n")
            case ..<0:
                print("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–±—Ä–∞—Ç—å –∏–∑ –∫—É–∑–æ–≤–∞ –≥—Ä—É–∑ –≤–µ—Å–æ–º < 0 –∫–≥\n")
            case 0.1...:
                guard (self.currentVolumeTrunk - value) >= 0 else {
                    print("‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–±—Ä–∞—Ç—å –≥—Ä—É–∑ –≤–µ—Å–æ–º \(value) –∫–≥, —É –≤–∞—Å –≤ –∫—É–∑–æ–≤–µ –≤—Å–µ–≥–æ \(self.currentVolumeTrunk) –∫–≥\n")
                    return
                }
                self.currentVolumeTrunk -= value
                print("‚úÖ –í—ã —É–±—Ä–∞–ª–∏ –∏–∑ –∫—É–∑–æ–≤–µ –≥—Ä—É–∑ –≤–µ—Å–æ–º \(value) –∫–≥, —Å–µ–π—á–∞—Å –≤ –∫—É–∑–æ–≤–µ \(self.currentVolumeTrunk), —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ —Å—Ç–∞–ª–æ \(self.freeVolume) –∫–≥\n")
                
            default:
                fatalError("‚ö†Ô∏è –ü–æ–ø–∞–ª–æ –≤ default [remove]")
            }
        }
    }
    
    init(brand: String, type: TypeOfTrunkCar, numAxies: NumberOfAxies, year: Int, transmission: CarTransmission, engine: TypeEngine, mileage: Double, currentVolumeTrunk: Double, maxVolumeTrunk: Double, engineStatus: startStopStatus, windowStatus: openCloseStatus) {
        self.brand = brand
        self.year = year
        self.transmission = transmission
        self.engine = engine
        self.mileage = mileage
        self.currentVolumeTrunk = currentVolumeTrunk
        self.maxVolumeTrunk = maxVolumeTrunk
        self.engineStatus = engineStatus
        self.windowStatus = windowStatus
        
        self.type = type
            self.numAxies = numAxies
        
        print("üõû –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è \(self.brand)")
        TrunkCar.countCar += 1
        //Car.printCountCar()
    }
    
    deinit {
        print("üóë –î–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è \(self.brand)")
        TrunkCar.countCar -= 1
        //Car.printCountCar()
    }

}

extension TrunkCar: CustomStringConvertible {
    var description: String {
        print("üöö –≥—Ä—É–∑–æ–≤–∞—è –º–∞—à–∏–Ω–∞")
        print("- –¢–∏–ø \(self.type.rawValue)\n- –ö–æ–ª-–≤–æ –æ—Å–µ–π \(self.numAxies.rawValue)\n")
        return ""
    }
}

var volvoXC90 : SportCar? = SportCar(brand: "Volvo", type: .offroad, isTunning: false, year: 2020, transmission: .auto, engine: .petrol, mileage:200, currentVolumeTrunk: 0, maxVolumeTrunk: 600, engineStatus: .stop, windowStatus: .close)
if (volvoXC90 != nil) {
    volvoXC90!.setEngine(status: .start)
    volvoXC90!.setVolume(value: 200)
    volvoXC90!.changeTunning()
}

var manTruck : TrunkCar? = TrunkCar(brand: "Man", type: .special, numAxies: .Ax3, year: 2008, transmission: .manual, engine: .diesel, mileage: 15000, currentVolumeTrunk: 0, maxVolumeTrunk: 50000, engineStatus: .start, windowStatus: .close)

if (manTruck != nil) {
    manTruck!.setEngine(status: .start)
    manTruck!.setWindow(status: .open)
    manTruck!.loadingAndUnloading(action: .put, value: 200)
    manTruck!.loadingAndUnloading(action: .put, value: 600)
    manTruck!.loadingAndUnloading(action: .put, value: 50000)
    manTruck!.loadingAndUnloading(action: .remove, value: 300)
    manTruck!.loadingAndUnloading(action: .remove, value: 500)
}

volvoXC90 = nil
manTruck = nil


